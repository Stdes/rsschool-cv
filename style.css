@font-face {
    font-family: 'Open Sans';
    src: url(/assets/fonts/OpenSans-Regular.ttf);
}

header {
    font-family: "Open Sans"; color: black ; font-size: xx-large; 
}

* {
    box-sizing: border-box;
  }
  /*Благодаря свойству box-sizing: border-box; границы и внутренние отступы будут учитываться в значениях,
   которые вы указываете в ширине и высоте элемента. Это упрощает работу с размерами, позволяет указывать их
   более логично*/

body {
    text-align: center;
    border: 6px solid blue;
    min-height: 100vh; /*100 viewport height (растянуть по высоте на весь экран)*/
    /*уберем полосу прокрутки*/
    margin: 0; /*внешний отступ 0*/
    padding: 0; /*внутреннее поле 0*/
    /*прижмем footer к низу страницы*/
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    /*
    Обратите внимание, что свойство justify-content определяет выравнивание элементов по главной оси.
    По умолчанию у flexbox главная ось горизонтальная и свойство justify-content выравнивает элементы 
    по горизонтали. Но указав свойство flex-direction: column;, мы тем самым переопределили направление
     главной оси. Поэтому в данном случае justify-content определяет выравнивание по вертикали.
    Свойство justify-content: space-between; указывает, что все элементы размещаются на максимальном
    расстоянии друг от друга, крайние прижаты к границам родителя. Цель достигнута, footer прижат к низу страницы.
    */
}

.container {
    /*элемент с классом container, который ограничивает ширину контента и центрирует его на странице
    по горизонтали.*/
    max-width: 1440px;
    margin: 0 auto;
    /*Как любой блочный элемент, контейнер стремится занять всю ширину окна браузера. 
    Так и происходит до тех пор, пока ширина окна не превышает 1440px, если окно браузера больше,
    свойство max-width ограничивает ширину контейнера.*/
}

.nav-list {
    display: flex; /*разместим элементы навигации в одну строку*/
    justify-content: flex-end; /*сдвинем их вправо*/
    align-items: center; /*выровняем по высоте по центру*/
    list-style: none; /*убираем маркеры в меню*/
}

.nav-link {
    /*добавим отступы между элементами меню*/
    padding: 0 20px;
    line-height: 50px; /*минимальная высота строки*/
}

a, u {
    /*уберем подчеркивание ссылок*/
    text-decoration: none;
    color: blue;
}

html {
    scroll-behavior: smooth; /*плавная прокрутка*/
}

.main-container {
    display: flex;/*разместим секции по горизонтали*/
    flex-wrap: wrap;/*секции, которые не помещаются по ширине контейнера переносятся на новую строку*/
}

.section {
    width: 50%;
}

/*Укажем, что при уменьшении ширины экрана до 768px, секция будет занимать всю ширину:*/
@media (max-width: 768px) {
  .section {
    width: 100%;
  }
}